#!/bin/bash

set -e

NEXTCLOUD_CONTAINER_PREFIX="nextcloud-aio"
NEXTCLOUD_VOLUME_PREFIX="nextcloud_aio"

echo "üîç Recherche d'anciens conteneurs li√©s √† Nextcloud AIO..."

# Liste tous les conteneurs qui commencent par nextcloud-aio
containers=$(sudo docker ps -a --filter "name=^/${NEXTCLOUD_CONTAINER_PREFIX}" --format "{{.ID}}")

if [ -n "$containers" ]; then
    echo "‚ö†Ô∏è  ATTENTION :"
    echo "Une ou plusieurs instances Nextcloud AIO ont √©t√© trouv√©es."
    echo ""
    read -p "√ätes-vous s√ªr de vouloir supprimer ces instances et leurs volumes associ√©s ? (o/N) " confirmation

    if [[ "$confirmation" != "o" && "$confirmation" != "O" ]]; then
        echo "‚ùå Op√©ration annul√©e par l'utilisateur."
        exit 1
    fi

    echo "üõë Suppression des conteneurs li√©s √† Nextcloud AIO..."
    sudo docker rm -f $containers
else
    echo "‚úÖ Aucun conteneur Nextcloud existant trouv√©."
fi

echo "üîç Recherche d'anciens volumes li√©s √† Nextcloud AIO..."

# Liste tous les volumes qui commencent par nextcloud_aio
volumes=$(sudo docker volume ls --filter "name=${NEXTCLOUD_VOLUME_PREFIX}" --format "{{.Name}}")

if [ -n "$volumes" ]; then
    echo "üóëÔ∏è  Suppression des volumes li√©s √† Nextcloud AIO..."
    sudo docker volume rm $volumes
else
    echo "‚úÖ Aucun volume Nextcloud existant trouv√©."
fi

echo "üöÄ Lancement du conteneur Nextcloud AIO Mastercontainer..."

sudo docker run \
--init \
--sig-proxy=false \
--name nextcloud-aio-mastercontainer \
--restart always \
--publish 8080:8080 \
--env APACHE_PORT=11000 \
--env APACHE_IP_BINDING=0.0.0.0 \
--env APACHE_ADDITIONAL_NETWORK="" \
--volume nextcloud_aio_mastercontainer:/mnt/docker-aio-config \
--volume /var/run/docker.sock:/var/run/docker.sock:ro \
ghcr.io/nextcloud-releases/all-in-one:latest

echo "‚úÖ D√©ploiement termin√© !"

# --env SKIP_DOMAIN_VALIDATION=true
